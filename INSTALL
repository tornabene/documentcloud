========================= Base DocumentCloud Image ============================
* Use the official Canonical Ubuntu 12.04 LTS 64bit


sudo apt-get update
sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev



sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev
curl -L https://get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm
echo "source ~/.rvm/scripts/rvm" >> ~/.bashrc
rvm install 2.1.0
rvm use 2.1.0 --default
ruby -v

echo "gem: --no-ri --no-rdoc" > ~/.gemrc

sudo gem update --system

git config --global color.ui true
git config --global user.name "Chris Oliver"
git config --global user.email "chris@excid3.com"
ssh-keygen -t rsa -C "chris@excid3.com"

cat ~/.ssh/id_rsa.pub
ssh-add
ssh -T git@github.com

#Hi excid3! You've successfully authenticated, but GitHub does not provide shell access.
sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs

gem install rails
rbenv rehash
rails -v
# Rails 4.0.2



sudo apt-get install mysql-server mysql-client libmysqlclient-dev

sudo apt-get update
sudo apt-get install postgresql-common
sudo apt-get install postgresql-9.1 libpq-dev

sudo -u postgres createuser chris -s

# If you would like to set a password for the user, you can do the following
sudo -u postgres psql
postgres=# \password chris

#### TESTINT RAILS4

rails new myapp

#### If you want to use MySQL
rails new myapp -d mysql

#### If you want to use Postgres
# Note that this will expect a postgres user with the same username
# as your app, you may need to edit config/database.yml to match the
# user you created earlier
rails new myapp -d postgresql

# Move into the application directory
cd myapp

# If you setup MySQL or Postgres with a username/password, modify the
# config/database.yml file to contain the username/password that you specified

# Create the database
rake db:create

rails server



#INTSTALLAZIONE APACHE MOD PASSENGER AND SSL
sudo apt-get install apache2 apache2-mpm-prefork apache2-prefork-dev
#cREATE SSL CERTIFICATE FOR APACHE2
sudo mkdir -p /etc/apache2/ssl/{crt,key}
sudo openssl req -new -x509 -days 365 -keyout /etc/apache2/ssl/key/server.key -out /etc/apache2/ssl/crt/server.crt -nodes -subj '/O=Ipublic, Ltd/OU=WWW Security Team/CN=dcloud.ntipa.org'
sudo a2enmod rewrite
sudo a2enmod ssl

sudo -s
cat > /etc/apache2/sites-available/dcloud <<EOF
<VirtualHost *:80>
ServerName dcloud.ntipa.org
DocumentRoot /home/tino/develop/rails/documentcloud/public
RailsEnv development
RailsAllowModRewrite off

#<Location />
#RewriteEngine on
#RewriteCond %{HTTPS} off
#RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R]
#</Location>

</VirtualHost>
<VirtualHost *:443>
ServerName dcloud.ntipa.org
DocumentRoot /home/tino/develop/rails/documentcloud/public
RailsEnv development
RailsAllowModRewrite off
SSLEngine On
SSLProtocol -all +TLSv1 +SSLv3
SSLCipherSuite HIGH:MEDIUM:!aNULL:+SHA1:+MD5:+HIGH:+MEDIUM
SSLCertificateFile /etc/apache2/ssl/crt/server.crt
SSLCertificateKeyFile /etc/apache2/ssl/key/server.key
SSLVerifyClient optional
SSLVerifyDepth 1
SSLOptions +StdEnvVars +StrictRequire
</VirtualHost>
EOF

exit
sudo a2ensite dcloud

sudo apt-get install mysql-server mysql-client
gem install mysql
gem install passenger
rvmsudo passenger-install-apache2-module
#LoadModule apache manual or 

cat > /etc/apache2/mods-available/passenger.load  <<EOF
LoadModule passenger_module /home/tino/.rvm/gems/ruby-2.1.0/gems/passenger-4.0.37/buildout/apache2/mod_passenger.so
EOF

cat > /etc/apache2/mods-available/passenger.conf  <<EOF
<IfModule mod_passenger.c>
PassengerRoot /home/tino/.rvm/gems/ruby-2.1.0/gems/passenger-4.0.37
PassengerDefaultRuby /home/tino/.rvm/gems/ruby-2.1.0/wrappers/ruby
</IfModule>
EOF

#LoadModule  
sudo a2enmod passenger
 
